// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:3001' | (string & {});
};

/**
 * Employee
 */
export type Employee = {
    /**
     * First Name
     */
    first_name: string;
    /**
     * Last Name
     */
    last_name: string;
};

/**
 * EmployeeCreate
 */
export type EmployeeCreate = {
    /**
     * User Id
     */
    user_id: string;
    /**
     * First Name
     */
    first_name: string;
    /**
     * Last Name
     */
    last_name: string;
};

/**
 * GetSetupStatus
 */
export type GetSetupStatus = {
    /**
     * Is Setup
     */
    is_setup: boolean;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * LoginRequest
 */
export type LoginRequest = {
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
};

/**
 * MeUser
 */
export type MeUser = {
    /**
     * Id
     */
    id: string;
    /**
     * Username
     */
    username: string;
    /**
     * Is Superuser
     */
    is_superuser: boolean;
    /**
     * Created At
     */
    created_at: string;
    employee: Employee | null;
};

/**
 * PagedResult
 */
export type PagedResultListUserInfo = {
    /**
     * Page
     */
    page: Array<UserInfo>;
    /**
     * Total
     */
    total: number;
};

/**
 * PasswordChangeRequest
 */
export type PasswordChangeRequest = {
    /**
     * Current Password
     */
    current_password: string;
    /**
     * New Password
     */
    new_password: string;
};

/**
 * ServerStoreCreate
 */
export type ServerStoreCreate = {
    /**
     * Timezone
     */
    timezone: string;
};

/**
 * SetupCreate
 */
export type SetupCreate = {
    user: UserCreate;
    server_store: ServerStoreCreate;
};

/**
 * TokenPair
 */
export type TokenPair = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Refresh Token
     */
    refresh_token: string;
    token_type?: TokenType;
};

/**
 * TokenType
 */
export type TokenType = 'bearer';

/**
 * UserCreate
 */
export type UserCreate = {
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
};

/**
 * UserEmployeeOnly
 */
export type UserEmployeeOnly = {
    /**
     * First Name
     */
    first_name: string;
    /**
     * Last Name
     */
    last_name: string;
};

/**
 * UserInfo
 */
export type UserInfo = {
    /**
     * Id
     */
    id: string;
    /**
     * Username
     */
    username: string;
    /**
     * Is Superuser
     */
    is_superuser: boolean;
    /**
     * Created At
     */
    created_at: string;
    employee: UserEmployeeOnly | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type MeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/me/';
};

export type MeResponses = {
    /**
     * Successful Response
     */
    200: MeUser;
};

export type MeResponse = MeResponses[keyof MeResponses];

export type ListUsersData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Page
         */
        page: number;
        /**
         * Page Size
         */
        page_size: number;
    };
    url: '/users/';
};

export type ListUsersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListUsersError = ListUsersErrors[keyof ListUsersErrors];

export type ListUsersResponses = {
    /**
     * Successful Response
     */
    200: PagedResultListUserInfo;
};

export type ListUsersResponse = ListUsersResponses[keyof ListUsersResponses];

export type CreateUserData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/users/';
};

export type CreateUserErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateUserError = CreateUserErrors[keyof CreateUserErrors];

export type CreateUserResponses = {
    /**
     * Successful Response
     */
    201: UserInfo;
};

export type CreateUserResponse = CreateUserResponses[keyof CreateUserResponses];

export type DeleteUserData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type DeleteUserErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteUserError = DeleteUserErrors[keyof DeleteUserErrors];

export type DeleteUserResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUserByIdData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/users/{id}';
};

export type GetUserByIdErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserByIdError = GetUserByIdErrors[keyof GetUserByIdErrors];

export type GetUserByIdResponses = {
    /**
     * Successful Response
     */
    200: UserInfo;
};

export type GetUserByIdResponse = GetUserByIdResponses[keyof GetUserByIdResponses];

export type RegisterUserData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/auth/register';
};

export type RegisterUserErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterUserError = RegisterUserErrors[keyof RegisterUserErrors];

export type RegisterUserResponses = {
    /**
     * Successful Response
     */
    200: TokenPair;
};

export type RegisterUserResponse = RegisterUserResponses[keyof RegisterUserResponses];

export type LoginUserData = {
    body: LoginRequest;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type LoginUserErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginUserError = LoginUserErrors[keyof LoginUserErrors];

export type LoginUserResponses = {
    /**
     * Successful Response
     */
    200: TokenPair;
};

export type LoginUserResponse = LoginUserResponses[keyof LoginUserResponses];

export type LogoutAllSessionsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/logout-all';
};

export type LogoutAllSessionsResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type LogoutAllSessionsResponse = LogoutAllSessionsResponses[keyof LogoutAllSessionsResponses];

export type RefreshTokensData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/refresh';
};

export type RefreshTokensResponses = {
    /**
     * Successful Response
     */
    200: TokenPair;
};

export type RefreshTokensResponse = RefreshTokensResponses[keyof RefreshTokensResponses];

export type ChangePasswordData = {
    body: PasswordChangeRequest;
    path?: never;
    query?: never;
    url: '/auth/change-password';
};

export type ChangePasswordErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChangePasswordError = ChangePasswordErrors[keyof ChangePasswordErrors];

export type ChangePasswordResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type ChangePasswordResponse = ChangePasswordResponses[keyof ChangePasswordResponses];

export type GetCurrentEmployeeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/employees/me';
};

export type GetCurrentEmployeeResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetEmployeesData = {
    body?: never;
    path: {
        /**
         * User Id
         */
        user_id: string;
    };
    query?: never;
    url: '/employees/{user_id}';
};

export type GetEmployeesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetEmployeesError = GetEmployeesErrors[keyof GetEmployeesErrors];

export type GetEmployeesResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateEmployeeData = {
    body: EmployeeCreate;
    path?: never;
    query?: never;
    url: '/employees/';
};

export type CreateEmployeeErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateEmployeeError = CreateEmployeeErrors[keyof CreateEmployeeErrors];

export type CreateEmployeeResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type GetSetupStatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/__setup/';
};

export type GetSetupStatusResponses = {
    /**
     * Successful Response
     */
    201: GetSetupStatus;
};

export type GetSetupStatusResponse = GetSetupStatusResponses[keyof GetSetupStatusResponses];

export type SetupCreateData = {
    body: SetupCreate;
    path?: never;
    query?: never;
    url: '/__setup/';
};

export type SetupCreateErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SetupCreateError = SetupCreateErrors[keyof SetupCreateErrors];

export type SetupCreateResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};
