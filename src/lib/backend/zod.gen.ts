// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

/**
 * Employee
 */
export const zEmployee = z.object({
    first_name: z.string(),
    last_name: z.string()
});

/**
 * EmployeeCreate
 */
export const zEmployeeCreate = z.object({
    user_id: z.uuid(),
    first_name: z.string(),
    last_name: z.string()
});

/**
 * GetSetupStatus
 */
export const zGetSetupStatus = z.object({
    is_setup: z.boolean()
});

/**
 * ValidationError
 */
export const zValidationError = z.object({
    loc: z.array(z.union([
        z.string(),
        z.int()
    ])),
    msg: z.string(),
    type: z.string()
});

/**
 * HTTPValidationError
 */
export const zHttpValidationError = z.object({
    detail: z.optional(z.array(zValidationError))
});

/**
 * LoginRequest
 */
export const zLoginRequest = z.object({
    username: z.string(),
    password: z.string()
});

/**
 * MeUser
 */
export const zMeUser = z.object({
    id: z.uuid(),
    username: z.string(),
    is_superuser: z.boolean(),
    created_at: z.iso.datetime(),
    employee: z.union([
        zEmployee,
        z.null()
    ])
});

/**
 * UserEmployeeOnly
 */
export const zUserEmployeeOnly = z.object({
    first_name: z.string(),
    last_name: z.string()
});

/**
 * UserInfo
 */
export const zUserInfo = z.object({
    id: z.uuid(),
    username: z.string(),
    is_superuser: z.boolean(),
    created_at: z.iso.datetime(),
    employee: z.union([
        zUserEmployeeOnly,
        z.null()
    ])
});

/**
 * PagedResult
 */
export const zPagedResultListUserInfo = z.object({
    page: z.array(zUserInfo),
    total: z.int()
});

/**
 * PasswordChangeRequest
 */
export const zPasswordChangeRequest = z.object({
    current_password: z.string(),
    new_password: z.string()
});

/**
 * ServerStoreCreate
 */
export const zServerStoreCreate = z.object({
    timezone: z.string()
});

/**
 * UserCreate
 */
export const zUserCreate = z.object({
    username: z.string(),
    password: z.string()
});

/**
 * SetupCreate
 */
export const zSetupCreate = z.object({
    user: zUserCreate,
    server_store: zServerStoreCreate
});

/**
 * TokenType
 */
export const zTokenType = z.enum([
    'bearer'
]);

/**
 * TokenPair
 */
export const zTokenPair = z.object({
    access_token: z.string(),
    refresh_token: z.string(),
    token_type: z.optional(zTokenType)
});

export const zMeData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Successful Response
 */
export const zMeResponse = zMeUser;

export const zListUsersData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.object({
        page: z.int().gte(0),
        page_size: z.int().gte(1).lte(200)
    })
});

/**
 * Successful Response
 */
export const zListUsersResponse = zPagedResultListUserInfo;

export const zCreateUserData = z.object({
    body: zUserCreate,
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Successful Response
 */
export const zCreateUserResponse = zUserInfo;

export const zRegisterUserData = z.object({
    body: zUserCreate,
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Successful Response
 */
export const zRegisterUserResponse = zTokenPair;

export const zLoginUserData = z.object({
    body: zLoginRequest,
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Successful Response
 */
export const zLoginUserResponse = zTokenPair;

export const zLogoutAllSessionsData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Successful Response
 */
export const zLogoutAllSessionsResponse = z.void();

export const zRefreshTokensData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Successful Response
 */
export const zRefreshTokensResponse = zTokenPair;

export const zChangePasswordData = z.object({
    body: zPasswordChangeRequest,
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Successful Response
 */
export const zChangePasswordResponse = z.void();

export const zGetCurrentEmployeeData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

export const zGetEmployeesData = z.object({
    body: z.optional(z.never()),
    path: z.object({
        user_id: z.uuid()
    }),
    query: z.optional(z.never())
});

export const zCreateEmployeeData = z.object({
    body: zEmployeeCreate,
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

export const zGetSetupStatusData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Successful Response
 */
export const zGetSetupStatusResponse = zGetSetupStatus;

export const zSetupCreateData = z.object({
    body: zSetupCreate,
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

export const zReadRootGetData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never())
});
